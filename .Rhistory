return(cbind(i,r))
}
epi2 <- impute_gsem(epi, 1/2)
pbla_incomplete_gsem(rates, epi2[,2], epi2[,1], N)
epi3 <- impute_gsem(epi, 1/8)
pbla_incomplete_gsem(rates, epi3[,2], epi3[,1], N)
nlm(c(1,1), pbla_incomplete_gsem, list(r=epi2[,2], i=epi2[,1], N=N))
nlm(pbla_incomplete_gsem, c(1,1), list(r=epi2[,2], i=epi2[,1], N=N))
nlm(pbla_incomplete_gsem, c(1,1), r=epi2[,2], i=epi2[,1], N=N)
nlm(pbla_partial_gsem, c(1,1), r=epi2[,2], N=N)
1.3/.67
1.96/.99
nlm(pbla_incomplete_gsem, c(1,1), r=epi2[,2], i=epi2[,1], N=N)$estimate
nlm(pbla_partial_gsem, c(1,1), r=epi2[,2], N=N)$estimate
mle_complete_gsem(epi[,2], epi[,1], N)
dim(epi)
# simulation parameters
simCt <- 0
simSize <- 3
simMin <- 10
simP <- 1/2
simQ <- 1
simStorage <- array(NA, dim = c(8,simSize))
while(simCt < simSize){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
while(dim(epi)[1] < simMin){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
}
ct <- ct + 1
storage[1,ct] <- dim(epi)[1]
storage[2,ct] <- N
r <- epi[,2]
i <- epi[,1]
storage[3:4,ct] <- mle_complete_gsem(r, i, N)
epi <- sort_gsem(epi)
r <- epi[,2]
storage[5:6,ct] <- nlm(pbla_partial_gsem, rates, r, N)$estimate
iepi <- impute_gsem(epi, simP, simQ)
iepi <- sort_gsem(iepi)
r <- iepi[,2]
i <- iepi[,1]
storage[7:8,ct] <- nlm(pbla_incomplete_gsem, rates, r, i, N)$estimate
print(ct)
}
# incompleteSEM Simulation Study
# Seth Temple, sdtemple@uw.edu
# Setup -------------------------------------------------------------------
library(incompleteSEM)
# epidemic model parameters
N <- 200
beta <- 1.5
gamma <- 1
rates <- c(beta, gamma)
# simulation parameters
simCt <- 0
simSize <- 3
simMin <- 10
simP <- 1/2
simQ <- 1
simStorage <- array(NA, dim = c(8,simSize))
# testing -----------------------------------------------------------------
epi <- rgsem(c(beta, gamma), N)
epi <- filter_gsem(epi)
likelihood_complete_gsem(rates, epi[,2], epi[,1], N)
mle_complete_gsem(epi[,2], epi[,1], N)
pbla_incomplete_gsem(rates, epi[,2], epi[,1], N)
pbla_partial_gsem(rates, epi[,2], N)
epi <- sort_gsem(epi)
epi2 <- impute_gsem(epi, 1/2)
pbla_incomplete_gsem(rates, epi2[,2], epi2[,1], N)
nlm(pbla_incomplete_gsem, c(1,1), r=epi2[,2], i=epi2[,1], N=N)$estimate
nlm(pbla_partial_gsem, c(1,1), r=epi2[,2], N=N)$estimate
mle_complete_gsem(epi[,2], epi[,1], N)
# Simulation Study --------------------------------------------------------
while(simCt < simSize){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
while(dim(epi)[1] < simMin){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
}
simCt <- simCt + 1
storage[1,simCt] <- dim(epi)[1]
storage[2,simCt] <- N
r <- epi[,2]
i <- epi[,1]
storage[3:4,simCt] <- mle_complete_gsem(r, i, N)
epi <- sort_gsem(epi)
r <- epi[,2]
storage[5:6,simCt] <- nlm(pbla_partial_gsem, rates, r, N)$estimate
iepi <- impute_gsem(epi, simP, simQ)
iepi <- sort_gsem(iepi)
r <- iepi[,2]
i <- iepi[,1]
storage[7:8,simCt] <- nlm(pbla_incomplete_gsem, rates, r, i, N)$estimate
print(simCt)
}
simStore <- array(NA, dim = c(8,simSize))
# simulation parameters
simCt <- 0
while(simCt < simSize){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
while(dim(epi)[1] < simMin){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
}
simCt <- simCt + 1
simStore[1,simCt] <- dim(epi)[1]
simStore[2,simCt] <- N
r <- epi[,2]
i <- epi[,1]
simStore[3:4,simCt] <- mle_complete_gsem(r, i, N)
epi <- sort_gsem(epi)
r <- epi[,2]
simStore[5:6,simCt] <- nlm(pbla_partial_gsem, rates, r, N)$estimate
iepi <- impute_gsem(epi, simP, simQ)
iepi <- sort_gsem(iepi)
r <- iepi[,2]
i <- iepi[,1]
simStore[7:8,simCt] <- nlm(pbla_incomplete_gsem, rates, r, i, N)$estimate
print(simCt)
}
View(simStore)
simStore <- array(NA, dim = c(simSize,8))
while(simCt < simSize){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
while(dim(epi)[1] < simMin){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
}
simCt <- simCt + 1
simStore[simCt,1] <- dim(epi)[1]
simStore[simCt,2] <- N
r <- epi[,2]
i <- epi[,1]
simStore[simCt,3:4] <- mle_complete_gsem(r, i, N)
epi <- sort_gsem(epi)
r <- epi[,2]
simStore[simCt,5:6] <- nlm(pbla_partial_gsem, rates, r, N)$estimate
iepi <- impute_gsem(epi, simP, simQ)
iepi <- sort_gsem(iepi)
r <- iepi[,2]
i <- iepi[,1]
simStore[simCt,7:8] <- nlm(pbla_incomplete_gsem, rates, r, i, N)$estimate
print(simCt)
}
# simulation parameters
simCt <- 0
simStore <- array(NA, dim = c(simSize,8))
while(simCt < simSize){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
while(dim(epi)[1] < simMin){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
}
simCt <- simCt + 1
simStore[simCt,1] <- dim(epi)[1]
simStore[simCt,2] <- N
r <- epi[,2]
i <- epi[,1]
simStore[simCt,3:4] <- mle_complete_gsem(r, i, N)
epi <- sort_gsem(epi)
r <- epi[,2]
simStore[simCt,5:6] <- nlm(pbla_partial_gsem, rates, r, N)$estimate
iepi <- impute_gsem(epi, simP, simQ)
iepi <- sort_gsem(iepi)
r <- iepi[,2]
i <- iepi[,1]
simStore[simCt,7:8] <- nlm(pbla_incomplete_gsem, rates, r, i, N)$estimate
print(simCt)
}
View(simStore)
View(iepi)
# incompleteSEM Simulation Study
# Seth Temple, sdtemple@uw.edu
# Setup -------------------------------------------------------------------
library(incompleteSEM)
# epidemic model parameters
N <- 200
beta <- 1.5
gamma <- 1
rates <- c(beta, gamma)
# simulation parameters
simCt <- 0
simSize <- 3
simMin <- 10
simP <- 1/2
simQ <- 1
simStore <- array(NA, dim = c(simSize,2,3))
simI <- rep(NA, simSize)
# testing -----------------------------------------------------------------
epi <- rgsem(c(beta, gamma), N)
epi <- filter_gsem(epi)
likelihood_complete_gsem(rates, epi[,2], epi[,1], N)
mle_complete_gsem(epi[,2], epi[,1], N)
pbla_incomplete_gsem(rates, epi[,2], epi[,1], N)
pbla_partial_gsem(rates, epi[,2], N)
epi <- sort_gsem(epi)
epi2 <- impute_gsem(epi, 1/2)
pbla_incomplete_gsem(rates, epi2[,2], epi2[,1], N)
nlm(pbla_incomplete_gsem, c(1,1), r=epi2[,2], i=epi2[,1], N=N)$estimate
nlm(pbla_partial_gsem, c(1,1), r=epi2[,2], N=N)$estimate
mle_complete_gsem(epi[,2], epi[,1], N)
# Simulation Study --------------------------------------------------------
while(simCt < simSize){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
while(dim(epi)[1] < simMin){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
}
simCt <- simCt + 1
simI[simCt] <- dim(epi)[1]
r <- epi[,2]
i <- epi[,1]
simStore[simCt,,1] <- mle_complete_gsem(r, i, N)
epi <- sort_gsem(epi)
r <- epi[,2]
simStore[simCt,,2] <- nlm(pbla_partial_gsem, rates, r, N)$estimate
iepi <- impute_gsem(epi, simP, simQ)
iepi <- sort_gsem(iepi)
r <- iepi[,2]
i <- iepi[,1]
simStore[simCt,,3] <- nlm(pbla_incomplete_gsem, rates, r, i, N)$estimate
print(simCt)
}
# simulation parameters
simCt <- 0
simSize <- 3
simMin <- 10
simP <- 1/2
simQ <- 1
simStore <- array(NA, dim = c(simSize,2,3))
simI <- rep(NA, simSize)
while(simCt < simSize){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
while(dim(epi)[1] < simMin){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
}
simCt <- simCt + 1
simI[simCt] <- dim(epi)[1]
r <- epi[,2]
i <- epi[,1]
simStore[simCt,,1] <- mle_complete_gsem(r, i, N)
epi <- sort_gsem(epi)
r <- epi[,2]
simStore[simCt,,2] <- nlm(pbla_partial_gsem, rates, r, N)$estimate
iepi <- impute_gsem(epi, simP, simQ)
iepi <- sort_gsem(iepi)
r <- iepi[,2]
i <- iepi[,1]
simStore[simCt,,3] <- nlm(pbla_incomplete_gsem, rates, r, i, N)$estimate
print(simCt)
}
simI
View(simStore)
simStore
# incompleteSEM Simulation Study
# Seth Temple, sdtemple@uw.edu
# Setup -------------------------------------------------------------------
library(incompleteSEM)
# epidemic model parameters
N <- 200
beta <- 1.5
gamma <- 1
rates <- c(beta, gamma)
# simulation parameters
simCt <- 0
simSize <- 3
simMin <- 10
simP <- 3/4
simQ <- 1
simStore <- array(NA, dim = c(simSize,2,3))
simI <- rep(NA, simSize)
# testing -----------------------------------------------------------------
epi <- rgsem(c(beta, gamma), N)
epi <- filter_gsem(epi)
likelihood_complete_gsem(rates, epi[,2], epi[,1], N)
mle_complete_gsem(epi[,2], epi[,1], N)
pbla_incomplete_gsem(rates, epi[,2], epi[,1], N)
pbla_partial_gsem(rates, epi[,2], N)
epi <- sort_gsem(epi)
epi2 <- impute_gsem(epi, 1/2)
pbla_incomplete_gsem(rates, epi2[,2], epi2[,1], N)
nlm(pbla_incomplete_gsem, c(1,1), r=epi2[,2], i=epi2[,1], N=N)$estimate
nlm(pbla_partial_gsem, c(1,1), r=epi2[,2], N=N)$estimate
mle_complete_gsem(epi[,2], epi[,1], N)
# Simulation Study --------------------------------------------------------
while(simCt < simSize){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
while(dim(epi)[1] < simMin){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
}
simCt <- simCt + 1
simI[simCt] <- dim(epi)[1]
r <- epi[,2]
i <- epi[,1]
simStore[simCt,,1] <- mle_complete_gsem(r, i, N)
epi <- sort_gsem(epi)
r <- epi[,2]
simStore[simCt,,2] <- nlm(pbla_partial_gsem, rates, r, N)$estimate
iepi <- impute_gsem(epi, simP, simQ)
iepi <- sort_gsem(iepi)
r <- iepi[,2]
i <- iepi[,1]
simStore[simCt,,3] <- nlm(pbla_incomplete_gsem, rates, r, i, N)$estimate
print(simCt)
}
simStore
1.099/.6
1.38/.89
devtools::create()
devtools::document()
devtools::install()
# incompleteSEM Simulation Study
# Seth Temple, sdtemple@uw.edu
# Setup -------------------------------------------------------------------
library(incompleteSEM)
# epidemic model parameters
N <- 200
beta <- 1.5
gamma <- 1
rates <- c(beta, gamma)
# simulation parameters
simCt <- 0
simSize <- 5
simMin <- 10
simP <- 3/4
simQ <- 1
simPrint <- 10
# storage parameters
simStore <- array(NA, dim = c(simSize,2,3))
simI <- rep(NA, simSize)
# testing -----------------------------------------------------------------
# epi <- rgsem(c(beta, gamma), N)
# epi <- filter_gsem(epi)
#
# likelihood_complete_gsem(rates, epi[,2], epi[,1], N)
# mle_complete_gsem(epi[,2], epi[,1], N)
# pbla_incomplete_gsem(rates, epi[,2], epi[,1], N)
#
# pbla_partial_gsem(rates, epi[,2], N)
#
# epi <- sort_gsem(epi)
#
# epi2 <- impute_gsem(epi, 1/2)
# pbla_incomplete_gsem(rates, epi2[,2], epi2[,1], N)
#
#
# nlm(pbla_incomplete_gsem, c(1,1), r=epi2[,2], i=epi2[,1], N=N)$estimate
# nlm(pbla_partial_gsem, c(1,1), r=epi2[,2], N=N)$estimate
# mle_complete_gsem(epi[,2], epi[,1], N)
# Simulation Study --------------------------------------------------------
while(simCt < simSize){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
while(dim(epi)[1] < simMin){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
}
simCt <- simCt + 1
simI[simCt] <- dim(epi)[1]
r <- epi[,2]
i <- epi[,1]
simStore[simCt,,1] <- mle_complete_gsem(r, i, N)
epi <- sort_gsem(epi)
r <- epi[,2]
simStore[simCt,,2] <- nlm(pbla_partial_gsem, rates, r, N)$estimate
iepi <- impute_gsem(epi, simP, simQ)
iepi <- sort_gsem(iepi)
r <- iepi[,2]
i <- iepi[,1]
simStore[simCt,,3] <- nlm(pbla_incomplete_gsem, rates, r, i, N)$estimate
if(!(simCt %% simPrint)){print(simCt)}
}
library(devtools)
devtools::document()
devtools::install()
# incompleteSEM Simulation Study
# Seth Temple, sdtemple@uw.edu
# Setup -------------------------------------------------------------------
library(incompleteSEM)
# epidemic model parameters
N <- 200
beta <- 1.5
gamma <- 1
rates <- c(beta, gamma)
# simulation parameters
simCt <- 0
simSize <- 5
simMin <- 10
simP <- 3/4
simQ <- 1
simPrint <- 10
# storage parameters
simStore <- array(NA, dim = c(simSize,2,3))
simI <- rep(NA, simSize)
# testing -----------------------------------------------------------------
# epi <- rgsem(c(beta, gamma), N)
# epi <- filter_gsem(epi)
#
# likelihood_complete_gsem(rates, epi[,2], epi[,1], N)
# mle_complete_gsem(epi[,2], epi[,1], N)
# pbla_incomplete_gsem(rates, epi[,2], epi[,1], N)
#
# pbla_partial_gsem(rates, epi[,2], N)
#
# epi <- sort_gsem(epi)
#
# epi2 <- impute_gsem(epi, 1/2)
# pbla_incomplete_gsem(rates, epi2[,2], epi2[,1], N)
#
#
# nlm(pbla_incomplete_gsem, c(1,1), r=epi2[,2], i=epi2[,1], N=N)$estimate
# nlm(pbla_partial_gsem, c(1,1), r=epi2[,2], N=N)$estimate
# mle_complete_gsem(epi[,2], epi[,1], N)
# Simulation Study --------------------------------------------------------
while(simCt < simSize){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
while(dim(epi)[1] < simMin){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
}
simCt <- simCt + 1
simI[simCt] <- dim(epi)[1]
r <- epi[,2]
i <- epi[,1]
simStore[simCt,,1] <- mle_complete_gsem(r, i, N)
epi <- sort_gsem(epi)
r <- epi[,2]
simStore[simCt,,2] <- nlm(pbla_partial_gsem, rates, r, N)$estimate
iepi <- impute_gsem(epi, simP, simQ)
iepi <- sort_gsem(iepi)
r <- iepi[,2]
i <- iepi[,1]
simStore[simCt,,3] <- nlm(pbla_incomplete_gsem, rates, r, i, N)$estimate
if(!(simCt %% simPrint)){print(simCt)}
}
library(devtools)
devtools::document()
devtools::install()
# incompleteSEM Simulation Study
# Seth Temple, sdtemple@uw.edu
# Setup -------------------------------------------------------------------
library(incompleteSEM)
# epidemic model parameters
N <- 200
beta <- 1.5
gamma <- 1
rates <- c(beta, gamma)
# simulation parameters
simCt <- 0
simSize <- 5
simMin <- 10
simP <- 3/4
simQ <- 1
simPrint <- 10
# storage parameters
simStore <- array(NA, dim = c(simSize,2,3))
simI <- rep(NA, simSize)
# testing -----------------------------------------------------------------
# epi <- rgsem(c(beta, gamma), N)
# epi <- filter_gsem(epi)
#
# likelihood_complete_gsem(rates, epi[,2], epi[,1], N)
# mle_complete_gsem(epi[,2], epi[,1], N)
# pbla_incomplete_gsem(rates, epi[,2], epi[,1], N)
#
# pbla_partial_gsem(rates, epi[,2], N)
#
# epi <- sort_gsem(epi)
#
# epi2 <- impute_gsem(epi, 1/2)
# pbla_incomplete_gsem(rates, epi2[,2], epi2[,1], N)
#
#
# nlm(pbla_incomplete_gsem, c(1,1), r=epi2[,2], i=epi2[,1], N=N)$estimate
# nlm(pbla_partial_gsem, c(1,1), r=epi2[,2], N=N)$estimate
# mle_complete_gsem(epi[,2], epi[,1], N)
# Simulation Study --------------------------------------------------------
while(simCt < simSize){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
while(dim(epi)[1] < simMin){
epi <- rgsem(rates, N)
epi <- filter_gsem(epi)
}
simCt <- simCt + 1
simI[simCt] <- dim(epi)[1]
r <- epi[,2]
i <- epi[,1]
simStore[simCt,,1] <- mle_complete_gsem(r, i, N)
epi <- sort_gsem(epi)
r <- epi[,2]
simStore[simCt,,2] <- nlm(pbla_partial_gsem, rates, r, N)$estimate
iepi <- decomplete_gsem(epi, simP, simQ)
iepi <- sort_gsem(iepi)
r <- iepi[,2]
i <- iepi[,1]
simStore[simCt,,3] <- nlm(pbla_incomplete_gsem, rates, r, i, N)$estimate
if(!(simCt %% simPrint)){print(simCt)}
}
